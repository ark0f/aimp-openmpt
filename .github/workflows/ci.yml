on: [push, pull_request]

name: CI

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: ${{ secrets.GIT_CREDENTIALS }}
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/ark0f/aimp.rs
      - run: cargo aimp --no-run
  rustfmt:
    runs-on: windows-latest
    steps:
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: ${{ secrets.GIT_CREDENTIALS }}
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    runs-on: windows-latest
    steps:
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: ${{ secrets.GIT_CREDENTIALS }}
      - uses: actions/checkout@v2
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings
